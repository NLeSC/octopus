// Common gradle configuration between offline and online build.
// This file can not be run by itself either run build.gradle or build-offline.gradle .

defaultTasks 'clean', 'assemble', 'test'

//    METADATA
// ==============
version = '1.1.0-SNAPSHOT'
description = 'Xenon: a middleware abstraction library that provides a simple programming interface to various compute and storage resources.'

// will generate a warning with JDK 8, since the runtime jar (rt.jar) of
// Java 7 is not available. Could configure gradle wrapper for this
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

// PROJECT DIRECTORIES
// ==============
ext.compileLibDir = file('lib')
ext.runtimeLibDir = file('lib/runtime')
ext.testLibDir = file('lib/test')

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
    userguide {
        java {
            srcDir 'doc/userguide/src'
        }
    }
    examples
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

apply from: 'gradle/documentation.gradle'
apply from: 'gradle/distribution.gradle'
apply from: 'gradle/docker.gradle'

//     TEST
// ==============

ext.xenonPropertiesFile = file('xenon.test.properties')
if (project.hasProperty('xenon.test.properties')) {
    ext.xenonPropertiesFile = file(project.get('xenon.test.properties'))
}
task testPropertiesFileExists << {
    assert xenonPropertiesFile.exists() : "Xenon test properties file not set at " + xenonPropertiesFile + ".  Modify from src/test/resources/xenon.test.properties.example"
}

//Create the task that runs the integration tests found from the
//configured source directory and uses the correct classpath.
task integrationTest(type: Test, dependsOn: testPropertiesFileExists) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    //Ensure that integration tests are run every time when you invoke this task
    outputs.upToDateWhen { false }
    systemProperty 'xenon.test.properties', xenonPropertiesFile.absolutePath
    //Ensure that our unit tests are run before our integration tests
    mustRunAfter test

    testLogging {
        events "started", "passed", "skipped", "failed"
    }
}

//Ensure that the HTML reports of unit and integration tests are written to different directories.
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
    reports.junitXml.destination = file("${project.buildDir}/${name}-results")
}

task wrapper(type: Wrapper) {
    description 'Generates gradle wrapper'
    group 'Build Setup'
    gradleVersion = '2.7'
}
